基本方針
シングルトンクラスは、GetInstanceでsたてぃっく変数として持っておくのではなく、初期化関数Initialize、破棄関数Disposeを持つことにする


構成
大きく3つの層からなる。
リソース管理層
　画像、音楽などのファイルリソース管理など
システム層
　エンジンのシステムを管理する。デバッグ機能や、監視、ゲームの状態遷移など
ゲームロジック層
　ゲームの進行を管理。シーンクラス
　
リソース管理層


システム層
シーン管理

　
　
ゲームロジック層は3つの要素からなる。シーンが管理。
ゲームオブジェクト
　ゲーム空間内の物体。
ユーザーインターフェス
　情報画面などのUI
プロセス
　ゲームオブジェクト、UIなどを外部から操作する。衝突判定、描画、イベントもこれが行う。着脱が容易で、ゲームオブジェクトなどの一時的な操作を行う。優先順位を持つ
　　
各要素の保持はGameObjectManager、UIManager、GameProcessManagerが担当
　
　
ゲームオブジェクト
　親子関係を持ち、必ずいずれかの地形に属する。具体的な機能はコンポーネントによって追加する。コンポーネントにより内部的な操作、恒常的な操作を行う。
　
　
各機能へのアクセス
ゲームオブジェクトはゲームオブジェクトとプロセス
プロセスはゲームオブジェクトとプロセス、UI、シーン機能(遷移など)
UIはUIとプロセ巣

各機能へのアクセスにはAccessorを通して行う。こうすることでシステム関数を公開しなくても済む。ユーザーが定義する各ゲームコンポーネント、プロセス、UIオブジェクト、マネージャ、SceneSetUpperはこのAccessorを通じてマネージャにアクセス。
GameObjectとも同様に、ユーザー定義可能部分はGameObjectAccessorを通じてGameObjectにアクセスする。
Sceneも同じ。

---Accessorは通常アクセス用インターフェス
---Setupは設定用インターフェス

